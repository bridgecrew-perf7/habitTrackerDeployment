{"version":3,"sources":["components/navbar.jsx","components/habitAddForm.jsx","components/habit.jsx","components/habits.jsx","app.jsx","index.js"],"names":["NavBar","className","this","props","totalCount","PureComponent","HabitAddForm","memo","formRef","React","createRef","inputRef","ref","onSubmit","e","preventDefault","name","current","value","onAdd","reset","type","placeholder","onKeyPress","key","console","log","Habit","handleIncrement","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","handleReset","onReset","count","onClick","Habits","handleAdd","habits","map","id","Component","App","state","item","setState","filter","Date","now","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.924a566b.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\n// PureComponent \r\nclass NavBar extends PureComponent {\r\n    render() {\r\n        return (\r\n                <nav className=\"navbar\">\r\n                    <span>Habit Tracker</span>\r\n                    <i className=\"navbar-logo fab fa-pagelines\"></i>\r\n                    <span className=\"navbar-button\"> {this.props.totalCount} </span>\r\n                </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { memo } from 'react';\r\n\r\nconst HabitAddForm = memo ( props => { // memo는 PureComponent와 비슷: 업뎃이 필요가 없으면 하지않는다\r\n    const formRef = React.createRef();\r\n    const inputRef = React.createRef();\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault(); // no refresh\r\n        const name = inputRef.current.value;\r\n        // 로컬변수 name은 현재 inputRef의 value를 받아오는데,\r\n        name && props.onAdd(name);\r\n        //  name이 비어있지않다면 props에 전달된 onAdd라는 콜백함수에 이름을 전달하게\r\n        formRef.current.reset()//this.inputRef.current.value = ''; 입력 초기화\r\n    }; // = this.forRef.current.reset(); 과 위가 동일한 기능\r\n    return (\r\n        <form ref={formRef} className=\"input-form\" onSubmit={onSubmit}>\r\n            <input \r\n                ref={inputRef} //위 inputRef와 연결\r\n                type=\"text\" \r\n                className=\"habit-input\"  \r\n                placeholder=\" Habit\"\r\n                onKeyPress = {\r\n                    (e) => {\r\n                        if(e.key === 'Enter') {\r\n                            console.log('Enter Click');\r\n                        }\r\n                    }\r\n                }\r\n            />\r\n            <button className=\"input-button\"> ADD </button>\r\n        </form>\r\n    );\r\n});\r\n\r\nexport default HabitAddForm;","// habit의 전체적인 내용(+- 버튼, 휴지통)\r\nimport React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {\r\n    handleIncrement = () => { // 단순 props로 전달받은 데이터를 인자로 전달\r\n        this.props.onIncrement(this.props.habit);\r\n    };\r\n    handleDecrement = () => {\r\n        this.props.onDecrement(this.props.habit);\r\n    };\r\n    handleDelete = () => {\r\n        this.props.onDelete(this.props.habit);\r\n    };\r\n    handleReset = () => {\r\n        this.props.onReset(this.props.habit);\r\n    }\r\n    render() {\r\n        const {name, count} = this.props.habit;\r\n        // 방법 1. const {count} = this.props; // count 따로 받기\r\n        return (\r\n        <li className=\"habit\">\r\n            <span className=\"habit-name\"> {name} </span>\r\n            <span className=\"habit-count\"> {count} </span>\r\n            <button className=\"habit-button habit-increase\" \r\n            onClick={this.handleIncrement}>\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <button className=\"habit-button habit-decrease\" \r\n            onClick={this.handleDecrement}>\r\n                <i className=\"fas fa-minus-square\"></i>\r\n            </button>\r\n            <button className=\"habit-button habit-delete\" \r\n            onClick={this.handleDelete}>\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habit;","import React, { Component } from 'react';\r\nimport HabitAddForm from './habitAddForm';\r\nimport Habit from './habit';\r\n\r\n// prop로 전달된 습관들을 Habit이라는 Component로 변경해서 보여주기만 함\r\nclass Habits extends Component {\r\n    handleIncrement = (habit) => {\r\n        this.props.onIncrement(habit);\r\n    };                                               \r\n    handleDecrement = (habit) => {\r\n        this.props.onDecrement(habit);\r\n    };\r\n    handleDelete = (habit) => {\r\n        this.props.onDelete(habit);\r\n    };\r\n    handleAdd = (name) => {\r\n        this.props.onAdd(name);\r\n    };\r\n    handleReset = (habit) => {\r\n        this.props.onReset(habit);\r\n    };\r\n    render() {\r\n        console.log('habits');\r\n        return ( // 자식요소 둘 HabitAddForm, Habit\r\n            <div className=\"habits\">\r\n                <HabitAddForm onAdd={this.props.onAdd}/>\r\n                <ul>\r\n                    { this.props.habits.map( habit => (\r\n                    <Habit \r\n                        key={habit.id} // Callback함수들을 props로 전달\r\n                        habit={habit}\r\n                        onIncrement={this.props.onIncrement} // +버튼 클릭시 전달된 handleIncrement호출\r\n                        onDecrement={this.props.onDecrement}\r\n                        onDelete={this.props.onDelete}\r\n                        onAdd={this.props.onAdd}\r\n                        onReset={this.props.onReset}/>\r\n                    ))}\r\n                </ul>\r\n                <button className=\"reset-button\" onClick={this.props.onReset}> Reset All </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habits;","import React,{ Component } from 'react';\nimport './app.css';\n\nimport NavBar from './components/navbar';\nimport Habits from './components/habits';\n\nclass App extends Component {\n  state = { habits: []\n}\nhandleIncrement = (habit) => { \n  const habits = this.state.habits.map(item => {\n    if (item.id === habit.id) {\n      return {...habit, count: habit.count + 1}; // id가 같다면 count증가\n    }       // ...Obj.(= deconstructing Obj): 안에 있는 데이터는 똑같이 복사해오고 외부 Obj만 새로운 것으로.\n    return item; //같지 않다면 단순 item리턴\n  })\n  this.setState({ habits });\n};                                              \nhandleDecrement = (habit) => {\n const habits = this.state.habits.map(item => {\n   if (item.id === habit.id) {\n     const count = habit.count - 1; // 카운트가 빠지는데, \n     return {...habit, count: count < 0 ? 0 : count}; //count가 0보다 작으면 0을 아니면 새로운 카운트를\n   }\n   return item;\n })\n this.setState({ habits });\n};\nhandleDelete = (habit) => {\n  const habits = this.state.habits.filter(item => item.id !== habit.id)\n  // 로컬변수 habits => filter API를 통해 item전달받고 \n  //item.id가 habit.id와 동일하지 않으면 배열을 만들고 삭제되게\n  this.setState({ habits });\n};\nhandleAdd = (name) => {\n  const habits = [...this.state.habits, {id: Date.now(), name, count: 0}];\n  this.setState({ habits });\n};\nhandleReset = (habit) => {\n  const habits = [];\n  this.setState({ habits });\n};\n  render() {// UI가 정의된 부분\n    return ( \n        <> \n          <NavBar totalCount={this.state.habits.filter(item => item.count > 0).length}/>\n          <Habits\n            habits={this.state.habits}\n            onIncrement={this.handleIncrement}\n            onDecrement={this.handleDecrement}\n            onDelete={this.handleDelete}\n            onAdd={this.handleAdd}\n            onReset={this.handleReset}\n          />\n        </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render( // React.StrictMode: Component들을 한번 더 랜더링 해주고 잘못 된 것은 없는지 체크하는 역할(실제 배포 시 보이지 않음)\n  <React.StrictMode>\n    <App />\n    {/*<SimpleHabit/>*/}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}